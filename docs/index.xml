<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MPORM</title>
    <link>https://mporm.xjj.pub/</link>
    <description>Recent content on MPORM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Aug 2019 11:08:36 +0800</lastBuildDate>
    
	<atom:link href="https://mporm.xjj.pub/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Connect to Database</title>
      <link>https://mporm.xjj.pub/docs/overview/connect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/overview/connect/</guid>
      <description>Connect to Database MPORM can only connect MySQL database, and has two different ways to load configs of database
Load By DSN The minimum code that loads by dsn is wriiten as
from mporm import ORM, DSN ORM.load(DSN(user=&amp;#34;xxxx&amp;#34;, password=&amp;#34;xxxx&amp;#34;)) Because mporm will automatically set other configs as host = &amp;ldquo;localhost&amp;rdquo;, port = 3306, database = &amp;ldquo;test&amp;rdquo;, charset = &amp;ldquo;utf8&amp;rdquo;
Of course you can fill all the configs by yourself</description>
    </item>
    
    <item>
      <title>Define a Model</title>
      <link>https://mporm.xjj.pub/docs/overview/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/overview/model/</guid>
      <description>Define a Model mporm.Model mporm.Model is a Python class that includes the following fields: id, created_at, updated_at. You need to use it by inheritance.
So let&amp;rsquo;s define a model named &amp;ldquo;Hero&amp;rdquo;
from mporm import Model class Hero(Model): ... You should know that MPORM uses uuid for field id and there&amp;rsquo;s no the auto increase thing you can do about it.
Now we&amp;rsquo;d like to have our customized fields
from mporm import Model, StrField, IntField, BoolField class Hero(Model): name = StrField(capacity=32) age = IntField(size=32) alive = BoolField(default=True) You can see fields are defined by other classes from MPORM and each can take arguments</description>
    </item>
    
    <item>
      <title>Delete</title>
      <link>https://mporm.xjj.pub/docs/crud/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/crud/delete/</guid>
      <description>Delete Hero.where(name=&amp;#34;Thor&amp;#34;).delete() ## delete from `marvel_hero` where name = &amp;#34;Thor&amp;#34;; Note that the methods insert() update() delete() return the amount of rows that&amp;rsquo;re affected and method find() returns a list-typed query result and not to mention, the method findone() returns a dict-typed query result.</description>
    </item>
    
    <item>
      <title>Insert</title>
      <link>https://mporm.xjj.pub/docs/crud/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/crud/create/</guid>
      <description> Model We have defined a model &amp;ldquo;Hero&amp;rdquo; previously
from mporm import Model, StrField, IntField, BoolField class Hero(Model): __prefix__ &amp;#34;Marvel&amp;#34; name = StrField(capacity=32) age = IntField(size=32) alive = BoolField(default=True) Insert There are two methods you can choose from:
Hero.new(name=&amp;#34;Thor&amp;#34;, age=1000).insert() or simply use
Hero.add(name=&amp;#34;Thor&amp;#34;, age=1000) The SQL statement that&amp;rsquo;ll be executed is
insert into `marvel_hero` (name, age) values (&amp;#39;Thor&amp;#39;, 1000);</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://mporm.xjj.pub/docs/overview/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/overview/installation/</guid>
      <description> Installation Requirement  Python 3+ MySQL 5.5+  Install By PIP pip3 install mporm</description>
    </item>
    
    <item>
      <title>Select</title>
      <link>https://mporm.xjj.pub/docs/crud/query/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/crud/query/</guid>
      <description>Select Simple Query Hero.first() ## select * from `mar vel_hero` order by created_at limit 1; Hero.last() ## select * from `marvel_hero` order by created_at desc limit 1; Hero.take() ## select * from `marvel_hero` limit 1; Plus they can take an argument
Hero.first(10) ## select * from `marvel_hero` order by created_at limit 10; Hero.last(10) ## select * from `marvel_hero` order by created_at desc limit 10; Hero.take(10) ## select * from `marvel_hero` limit 10; Where Hero.</description>
    </item>
    
    <item>
      <title>Update</title>
      <link>https://mporm.xjj.pub/docs/crud/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mporm.xjj.pub/docs/crud/update/</guid>
      <description> Update Hero.where(name=&amp;#34;Thor&amp;#34;).set(age=1001).update() ## update `marvel_hero` set age=1001 where name = &amp;#39;Thor&amp;#39;;</description>
    </item>
    
    <item>
      <title>Contribute to MPORM</title>
      <link>https://mporm.xjj.pub/posts/contribute/</link>
      <pubDate>Sat, 24 Aug 2019 11:08:36 +0800</pubDate>
      
      <guid>https://mporm.xjj.pub/posts/contribute/</guid>
      <description> You can do anything to help deliver a better MPORM, including:
Program  Create pull request on Github to fix issues, agreed features from Github Issues  Documentation Editing  Make MPORMâ€™s documentation better by commiting to Github  Translate this site </description>
    </item>
    
    <item>
      <title>Creating the Documentation</title>
      <link>https://mporm.xjj.pub/posts/hello/</link>
      <pubDate>Sat, 24 Aug 2019 11:08:36 +0800</pubDate>
      
      <guid>https://mporm.xjj.pub/posts/hello/</guid>
      <description>Today, I searched hugo on Github and found this BOOK theme. So I decided to use it for one of my projects MPORM. That&amp;rsquo;s all.
 _ __ ___ _____ ___ _ __ _ __ ___ | &#39;_ ` _ \| __ \/ _ \| `__/| &#39;_ ` _ \ | | | | | | |___| |_| | | | | | | | | |_| |_| |_|_| \___/|_| |_| |_| |_|  </description>
    </item>
    
  </channel>
</rss>